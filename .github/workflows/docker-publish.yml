name: CI and CD

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0'

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Restore dependencies
      run: |
        dotnet restore ./UserService/UserService.csproj
        dotnet restore ./ResponsibleService/ResponsibleService.csproj
        dotnet restore ./GatewayService/GatewayService.csproj

    - name: Build the projects
      run: |
        dotnet build ./UserService/UserService.csproj --configuration Release
        dotnet build ./ResponsibleService/ResponsibleService.csproj --configuration Release
        dotnet build ./GatewayService/GatewayService.csproj --configuration Release

    - name: Run tests
      run: |
        dotnet test ./UserService/UserService.csproj
        dotnet test ./ResponsibleService/ResponsibleService.csproj
        dotnet test ./GatewayService/GatewayService.csproj

    - name: Publish the projects
      run: |
        dotnet publish ./UserService/UserService.csproj --configuration Release --output ./publish
        dotnet publish ./ResponsibleService/ResponsibleService.csproj --configuration Release --output ./publish
        dotnet publish ./GatewayService/GatewayService.csproj --configuration Release --output ./publish

    - name: Build and start Docker Compose
      run: |
        docker-compose -f docker-compose.yml up --build -d

    - name: Log in to Docker Hub
      run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker images
      run: |
        docker-compose -f docker-compose.yml push
